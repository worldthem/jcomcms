package ecommercejava.cms.icommyjava.controllers;


import com.google.gson.Gson;
import ecommercejava.cms.icommyjava.Helpers;
import ecommercejava.cms.icommyjava.dto.contactform.Contactform;
import ecommercejava.cms.icommyjava.dto.contactform.FieldsForm;
import ecommercejava.cms.icommyjava.entity.Settings;
import ecommercejava.cms.icommyjava.entity.Subscribers;
import ecommercejava.cms.icommyjava.mail.MailService;
import ecommercejava.cms.icommyjava.repository.SettingsRepository;
import ecommercejava.cms.icommyjava.repository.SubscribersRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import java.time.LocalDateTime;
import java.util.Map;


@Controller // This means that this class is a Controller
@RequestMapping(path="/ajax-call") // This means URL's start with /demo (after Application path)
public class AjaxController {
    //@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    private SubscribersRepository subscribersRepository;

    @Autowired
    private SettingsRepository settingsRepository;

    @Autowired
    MailService mailService;

    @PostMapping(path="/subscribe") // Map ONLY POST Requests
    public @ResponseBody
    String subscribe (@RequestParam String email) {
        Subscribers n = new Subscribers();
        n.setEmail(email);
        n.setCreated_at(LocalDateTime.now());  //LocalDateTime.now()
        subscribersRepository.save(n);
        return Helpers.translate("Thank you to subscribe to our newsletter");
    }

    @PostMapping(path="/contact-form-send") // Map ONLY POST Requests
    public @ResponseBody
    String subscribe (HttpServletRequest request) {
        Settings settings = settingsRepository.getOne(Integer.parseInt(request.getParameter("id")));
        if(settings !=null) {
            try {
                Contactform contactform = (new Gson()).fromJson(settings.getValue1(), Contactform.class);
                String message = "";
                 String title = contactform.getSubject() !=null && !contactform.getSubject().isEmpty()? contactform.getSubject() : "You got mail from <"+Helpers.baseurl()+"> ";
                 String body ="You got mail:<br/><br/>";
                 for(Map.Entry<String, FieldsForm> row : contactform.getFields().entrySet()){
                      body = body+ row.getValue().getLabel()+": "+ request.getParameter(row.getKey())+" <br/>";
                   }

                if(contactform.getTo() !=null && !contactform.getTo().isEmpty()){
                       message = mailService.sendmail(contactform.getTo(),title, body);
                  }

                 return message.contains("success")? contactform.getMessage(): message;

            }catch (Exception e){ }
        }
        return Helpers.translate("The e-mail was not sent contact the support of website!");
    }



}
